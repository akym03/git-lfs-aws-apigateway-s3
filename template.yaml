AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  git-lfs-aws-apigateway-s3

  Sample SAM Template for git-lfs-aws-apigateway-s3

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  artifactsBucketName:
    Type: String
    Default: "akym03-git-lfs-test"
  endpoint:
    Type: String
    Default: "http://foo.bar.example.com"
  repoName:
    Type: String
    Default: "lfs-test-repo"

Resources:
  artifactsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: Private
      BucketName: !Ref artifactsBucketName
  LmabdaFunction:
    Type: AWS::Serverless::Function 
    Properties:
      FunctionName: !Sub "git-lfs-${repoName}"
      CodeUri: src/
      Handler: git_lfs_aws_lambda.lambda_function.handler.lambda_handler
      Runtime: python3.8
      Timeout: 60
      Environment:
        Variables:
          ARTIFACTS_BUCKET: !Ref artifactsBucket
          ENDPOINT: !Ref endpoint
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref artifactsBucketName
      Events:
        batch:
          Type: Api 
          Properties:
            Path: "/{repoName}/info/lfs/objects/batch"
            Method: POST
        verifyObject:
          Type: Api 
          Properties:
            Path: "/{repoName}/info/lfs/objects/batch/verify"
            Method: POST
        verifyLocks:
          Type: Api 
          Properties:
            Path: "/{repoName}/info/lfs/locks/veirfy"
            Method: POST
        listLocks:
          Type: Api 
          Properties:
            Path: "/{repoName}/info/lfs/locks"
            Method: GET
        createLocks:
          Type: Api 
          Properties:
            Path: "/{repoName}/info/lfs/locks"
            Method: POST
        deleteLocks:
          Type: Api 
          Properties:
            Path: "/{repoName}/info/lfs/locks/{id}/unlock"
            Method: POST
Outputs:
  GitLfsFunction:
  #   Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/"
  # HelloWorldFunction:
  #   Description: "Hello World Lambda Function ARN"
  #   Value: !GetAtt HelloWorldFunction.Arn
  # HelloWorldFunctionIamRole:
  #   Description: "Implicit IAM Role created for Hello World function"
  #   Value: !GetAtt HelloWorldFunctionRole.Arn
